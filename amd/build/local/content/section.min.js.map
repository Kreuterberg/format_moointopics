{"version":3,"file":"section.min.js","sources":["../../../src/local/content/section.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Course section format component.\n *\n * @module     core_courseformat/local/content/section\n * @class      core_courseformat/local/content/section\n * @copyright  2021 Ferran Recio <ferran@moodle.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport Header from \"format_moointopics/local/content/section/header\";\nimport DndSection from \"format_moointopics/local/courseeditor/dndsection\";\nimport Templates from \"core/templates\";\nimport ModalFactory from \"core/modal_factory\";\nimport Mooin4Modal from \"../../mooin4modal\";\nimport { get_string as getString } from \"core/str\";\n\n\n\nexport default class extends DndSection {\n  /**\n   * Constructor hook.\n   */\n  create() {\n    // Optional component name for debugging.\n    this.name = \"content_section\";\n    // Default query selectors.\n    this.selectors = {\n      SECTION_ITEM: `[data-for='section_title']`,\n      CM: `[data-for=\"cmitem\"]`,\n      SECTIONINFO: `[data-for=\"sectioninfo\"]`,\n      SECTIONBADGES: `[data-region=\"sectionbadges\"]`,\n      SHOWSECTION: `[data-action=\"sectionShow\"]`,\n      HIDESECTION: `[data-action=\"sectionHide\"]`,\n      SETCHAPTER: `[data-action=\"sectionSetChapter\"]`,\n      UNSETCHAPTER: `[data-action=\"sectionUnsetChapter\"]`,\n      ACTIONTEXT: `.menu-action-text`,\n      ICON: `.icon`,\n      H5P: `.parent-iframe`,\n    };\n    // Most classes will be loaded later by DndCmItem.\n    this.classes = {\n      LOCKED: \"editinprogress\",\n      HASDESCRIPTION: \"description\",\n      HIDE: \"d-none\",\n      HIDDEN: \"hidden\",\n      CHAPTER: \"chapter\",\n    };\n\n    // We need our id to watch specific events.\n    this.id = this.element.dataset.id;\n  }\n\n  /**\n   * Initial state ready method.\n   *\n   * @param {Object} state the initial state\n   */\n  stateReady(state) {\n    this.configState(state);\n    // Drag and drop is only available for components compatible course formats.\n    if (this.reactive.isEditing && this.reactive.supportComponents) {\n      // Section zero and other formats sections may not have a title to drag.\n      const sectionItem = this.getElement(this.selectors.SECTION_ITEM);\n      if (sectionItem) {\n        // Init the inner dragable element.\n        const headerComponent = new Header({\n          ...this,\n          element: sectionItem,\n          fullregion: this.element,\n        });\n        this.configDragDrop(headerComponent);\n      }\n    }\n    this._showLastSectionModal(state);\n    this._hvpListener();\n  }\n\n  /**\n   * Component watchers.\n   *\n   * @returns {Array} of watchers\n   */\n  getWatchers() {\n    return [\n      { watch: `section[${this.id}]:updated`, handler: this._refreshSection },\n      // {watch: `section[${this.id}].sectionprogress:updated`, handler: this._updateSectionProgress}\n    ];\n  }\n\n  /**\n   * Validate if the drop data can be dropped over the component.\n   *\n   * @param {Object} dropdata the exported drop data.\n   * @returns {boolean}\n   */\n  validateDropData(dropdata) {\n    // If the format uses one section per page sections dropping in the content is ignored.\n    if (dropdata?.type === \"section\" && this.reactive.sectionReturn != 0) {\n      return false;\n    }\n    return super.validateDropData(dropdata);\n  }\n\n  /**\n   * Get the last CM element of that section.\n   *\n   * @returns {element|null}\n   */\n  getLastCm() {\n    const cms = this.getElements(this.selectors.CM);\n    // DndUpload may add extra elements so :last-child selector cannot be used.\n    if (!cms || cms.length === 0) {\n      return null;\n    }\n    return cms[cms.length - 1];\n  }\n\n  /**\n   * Update a content section using the state information.\n   *\n   * @param {object} param\n   * @param {Object} param.element details the update details.\n   */\n  _refreshSection({ element }) {\n    // Update classes.\n    this.element.classList.toggle(\n      this.classes.DRAGGING,\n      element.dragging ?? false\n    );\n    this.element.classList.toggle(this.classes.LOCKED, element.locked ?? false);\n    this.element.classList.toggle(\n      this.classes.HIDDEN,\n      !element.visible ?? false\n    );\n    this.element.classList.toggle(\n      this.classes.CHAPTER,\n      element.isChapter ?? false\n    );\n    this.locked = element.locked;\n    // The description box classes depends on the section state.\n    const sectioninfo = this.getElement(this.selectors.SECTIONINFO);\n    if (sectioninfo) {\n      sectioninfo.classList.toggle(\n        this.classes.HASDESCRIPTION,\n        element.hasrestrictions\n      );\n    }\n    // Update section badges and menus.\n    this._updateBadges(element);\n    this._updateActionsMenu(element);\n  }\n\n  /**\n   * Update a section badges using the state information.\n   *\n   * @param {object} section the section state.\n   */\n  _updateBadges(section) {\n    const current = this.getElement(\n      `${this.selectors.SECTIONBADGES} [data-type='iscurrent']`\n    );\n    current?.classList.toggle(this.classes.HIDE, !section.current);\n\n    const hiddenFromStudents = this.getElement(\n      `${this.selectors.SECTIONBADGES} [data-type='hiddenfromstudents']`\n    );\n    hiddenFromStudents?.classList.toggle(this.classes.HIDE, section.visible);\n  }\n\n  /**\n   * Update a section action menus.\n   *\n   * @param {object} section the section state.\n   */\n  async _updateActionsMenu(section) {\n    let selector;\n    let newAction;\n    if (section.visible) {\n      selector = this.selectors.SHOWSECTION;\n      newAction = \"sectionHide\";\n    } else {\n      selector = this.selectors.HIDESECTION;\n      newAction = \"sectionShow\";\n    }\n\n    if (section.isChapter) {\n      selector = this.selectors.SETCHAPTER;\n      newAction = \"sectionUnsetChapter\";\n    } else {\n      selector = this.selectors.UNSETCHAPTER;\n      newAction = \"sectionSetChapter\";\n    }\n\n    // Find the affected action.\n    const affectedAction = this.getElement(selector);\n    if (!affectedAction) {\n      return;\n    }\n    // Change action.\n    affectedAction.dataset.action = newAction;\n    // Change text.\n    const actionText = affectedAction.querySelector(this.selectors.ACTIONTEXT);\n    if (affectedAction.dataset?.swapname && actionText) {\n      const oldText = actionText?.innerText;\n      actionText.innerText = affectedAction.dataset.swapname;\n      affectedAction.dataset.swapname = oldText;\n    }\n    // Change icon.\n    const icon = affectedAction.querySelector(this.selectors.ICON);\n    if (affectedAction.dataset?.swapicon && icon) {\n      const newIcon = affectedAction.dataset.swapicon;\n      if (newIcon) {\n        const pixHtml = await Templates.renderPix(newIcon, \"core\");\n        Templates.replaceNode(icon, pixHtml, \"\");\n      }\n    }\n  }\n\n  async _showLastSectionModal(state) {\n    const section = state.section.get(this.id);\n    if (\n      section.showLastSectionModal &&\n      window.location.href == section.sectionurl.replace(/&amp;/g, \"&\")\n    ) {\n      const modal = await ModalFactory.create({\n        type: Mooin4Modal.TYPE,\n        title: await getString(\n          \"modal_last_section_of_chapter_title\",\n          \"format_moointopics\"\n        ),\n        body: Templates.render(\n          \"format_moointopics/local/content/modals/lastsection\",\n          {}\n        ),\n        footer: Templates.render(\n          \"format_moointopics/local/content/modals/modalfooterclose\",\n          {}\n        ),\n        scrollable: false,\n      });\n      modal.show();\n      modal.showFooter();\n      this.reactive.dispatch('setLastSectionModal', this.id);\n    }\n  }\n\n  _hvpListener() {\n    var parentIFrames = this.getElements(this.selectors.H5P);\n    if (parentIFrames.length > 0) {\n        parentIFrames.forEach((parentIFrame) => {\n            if (parentIFrame.contentDocument) {\n                var parentIFrameContent = parentIFrame.contentDocument || parentIFrame.contentWindow.document;\n\n                var nestedIFrame = parentIFrameContent.querySelector(\".h5p-iframe\");\n\n                if (nestedIFrame) {\n                    var H5P = nestedIFrame.contentWindow.H5P;\n                    H5P.externalDispatcher.on(\"xAPI\", this._hvpprogress.bind(this));\n                } else {\n                    setTimeout(this._hvpListener.bind(this), 100);\n                }\n            } else {\n                setTimeout(this._hvpListener.bind(this), 100); \n            }\n        });\n    }\n  }\n\n  _hvpprogress(event) {\n    window.console.log(event);\n    this.reactive.dispatch('updateSectionprogress', this.id);\n    //const progress = this.getElement(this.selectors.PROGRESSBARINNER);\n    //let computedStyle = window.getComputedStyle(progress);\n    //let width = computedStyle.width;\n    if (event.getVerb() === \"completed\") {\n      console.log(\"completed\")\n      \n      \n    }\n  }\n}\n"],"names":["DndSection","create","name","selectors","SECTION_ITEM","CM","SECTIONINFO","SECTIONBADGES","SHOWSECTION","HIDESECTION","SETCHAPTER","UNSETCHAPTER","ACTIONTEXT","ICON","H5P","classes","LOCKED","HASDESCRIPTION","HIDE","HIDDEN","CHAPTER","id","this","element","dataset","stateReady","state","configState","reactive","isEditing","supportComponents","sectionItem","getElement","headerComponent","Header","fullregion","configDragDrop","_showLastSectionModal","_hvpListener","getWatchers","watch","handler","_refreshSection","validateDropData","dropdata","type","sectionReturn","super","getLastCm","cms","getElements","length","classList","toggle","DRAGGING","dragging","locked","visible","isChapter","sectioninfo","hasrestrictions","_updateBadges","_updateActionsMenu","section","current","hiddenFromStudents","selector","newAction","affectedAction","action","actionText","querySelector","swapname","oldText","innerText","icon","swapicon","newIcon","pixHtml","Templates","renderPix","replaceNode","get","showLastSectionModal","window","location","href","sectionurl","replace","modal","ModalFactory","Mooin4Modal","TYPE","title","body","render","footer","scrollable","show","showFooter","dispatch","parentIFrames","forEach","parentIFrame","contentDocument","nestedIFrame","contentWindow","document","externalDispatcher","on","_hvpprogress","bind","setTimeout","event","console","log","getVerb"],"mappings":"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"}